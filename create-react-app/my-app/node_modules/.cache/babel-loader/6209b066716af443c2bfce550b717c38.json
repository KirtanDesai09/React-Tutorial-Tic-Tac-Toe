{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\kd_11777\\\\Documents\\\\GitHub\\\\create-react-app\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kd_11777\\\\Documents\\\\GitHub\\\\create-react-app\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xTurn ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xTurn: !this.state.xTurn\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xTurn ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array.fill(null)\n      }],\n      xTurn: true\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xTurn ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/kd_11777/Documents/GitHub/create-react-app/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","squares","handleClick","state","slice","calculateWinner","xTurn","setState","render","winner","status","Game","constructor","history","Array","fill","current","length","lines","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n      return (\r\n        <button \r\n            className=\"square\" \r\n            onClick={ props.onClick}\r\n        >\r\n            {props.value}\r\n        </button>\r\n      );\r\n    }\r\n  \r\n  class Board extends React.Component {    \r\n    renderSquare(i) {\r\n      return (\r\n      <Square \r\n      value={this.props.squares[i]}\r\n      onClick={() => this.props.onClick(i)}\r\n      />\r\n      );\r\n    }\r\n\r\n    handleClick(i) {\r\n        const squares = this.state.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]){\r\n            return;\r\n        }\r\n        squares[i] = this.state.xTurn ? 'X' : 'O';\r\n        this.setState({\r\n            squares: squares,\r\n            xTurn: !this.state.xTurn\r\n        });\r\n    }\r\n  \r\n    render() {\r\n      const winner = calculateWinner(this.state.squares);\r\n      let status;\r\n      if (winner) {\r\n          status = 'Winner: ' + winner;\r\n      }\r\n      else {\r\n          status = 'Next player: ' + (this.state.xTurn ? 'X' : 'O');\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        history: [{\r\n          squares: Array.fill(null),\r\n        }],\r\n        xTurn: true,\r\n      };\r\n    }\r\n    render() {\r\n\r\n      const history = this.state.history;\r\n      const current = history[history.length - 1];\r\n      const winner = calculateWinner(current.squares);\r\n\r\n      let status;\r\n      if (winner) {\r\n          status = 'Winner: ' + winner;\r\n      }\r\n      else {\r\n          status = 'Next player: ' + (this.state.xTurn ? 'X' : 'O');\r\n      }\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n            squares = {current.squares}\r\n            onClick={(i) => this.handleClick(i)}/>\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{/* status */}</div>\r\n            <ol>{/* TODO */}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function calculateWinner(squares) {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++){\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n        }\r\n        return null;\r\n    }\r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );"]},"metadata":{},"sourceType":"module"}